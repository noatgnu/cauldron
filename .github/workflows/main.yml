name: Build and Release Electron App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install R
      run: |
        Invoke-WebRequest -Uri https://cran.r-project.org/bin/windows/base/old/4.2.0/R-4.2.0-win.exe -OutFile R-Portable.exe
        New-Item -ItemType Directory -Force -Path app/bin/win/R-Portable
        Start-Process -FilePath R-Portable.exe -ArgumentList "/VERYSILENT", "/DIR=app\bin\win\R-Portable" -Wait

    - name: List directory contents for debugging
      run: dir app\bin\win\R-Portable

    - name: Install R packages
      run: Rscript app/scripts/install_packages.R
    
    - name: Download standalone Python 3.10
      run: |
        Invoke-WebRequest -Uri https://github.com/indygreg/python-build-standalone/releases/download/20240107/cpython-3.10.13+20240107-x86_64-pc-windows-msvc-shared-install_only.tar.gz -OutFile python-3.10.13-standalone.tar.gz
        New-Item -ItemType Directory -Force -Path app/bin/win/python
        tar -xzf python-3.10.13-standalone.tar.gz -C app/bin/win

    - name: List directory contents for debugging
      run: dir app\bin\win\python

    - name: Install Python packages
      env:
        R_HOME: ${{ github.workspace }}/app/bin/win/R-Portable
      run: |
        cmd /c app\bin\win\python\python.exe -m pip install -r app/requirements.txt

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build Electron app
      run: npm run electron:build

    - name: Get repository name
      id: repo_name
      run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

    - name: Compress NSIS output
      run: |
        $exclude = @("release\win-unpacked\*")
        Get-ChildItem -Path release\* -Exclude $exclude | Compress-Archive -DestinationPath release\$REPO_NAME-v${{ github.run_number }}.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release\$REPO_NAME-v${{ github.run_number }}.zip
        asset_name: $REPO_NAME-v${{ github.run_number }}.zip
        asset_content_type: application/zip
